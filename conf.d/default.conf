# nginx.vh.default.conf  --  docker-openresty
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
#
# This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
# default by the `include` directive in `/usr/local/openresty/nginx/conf/nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

resolver 8.8.8.8;
lua_ssl_verify_depth 5;
lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    error_log /var/log/nginx/error.log;
    set $session_name nginx_session;
    location / {
        access_by_lua_block {
            ngx.log(ngx.ERR, "access by lua")
            print("access by lua")
            local opts = {
                redirect_uri = "http://local.emedgene.com/redirect_uri",
                accept_none_alg = true,
                discovery = "https://dev-209322.okta.com/.well-known/openid-configuration",
                client_id = "0oa154z7gb1abv0kM4x6",
                client_secret = "EUQo_UIyxNU6e09UGVonLK87UmiS7pYwMN9q8ivt",
                redirect_uri_scheme = "http",
                logout_path = "/logout",
                redirect_after_logout_uri = "http://www.example.com:8080/auth/realms/NGINX/protocol/openid-connect/logout?redirect_uri=http://www.example.com/",
                redirect_after_logout_with_id_token_hint = false,
                session_contents = {id_token=true}
            }
            print("authenticate")
            -- call introspect for OAuth 2.0 Bearer Access Token validation
            local openidc = require("resty.openidc")
            openidc.set_logging(nil, { DEBUG = ngx.ERR, WARN = ngx.ERR })
            local res, err = openidc.authenticate(opts)
            if err then
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           /usr/local/openresty/nginx/html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}